Objectives:

Initialize a pre-trained MTCNN model from facenet_pytorch
Detect faces in an image using MTCNN model
Display the resulting bounding boxes of faces detected by the model
Crop out detected faces for further analysis
Determine facial landmarks such as eyes, nose, and mouth using the MTCNN model
Select a subset of images for face recognition tasks in the next lesson

Let's start by initializing the model. Here are a couple of arguments we get to set:

device: The device on which to run the model.
keep_all: A boolean determining if all detected faces are returned or not.
min_face_size: Minimum face size (in pixels) to search for in the image.
post_process: A boolean determining if we want image standardization of detected faces. This is advised before 
proceeding with face recognition models, but if we want face images that are returned to us to look normal to the human
eye, we can set post_process=False.

landmarks gives:
left eye,
right eye,
nose,
left mouth corner,
right mouth corner. shape = 3,5,2e